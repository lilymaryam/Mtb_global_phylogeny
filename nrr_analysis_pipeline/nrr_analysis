rule all:
    input:
        nrr_visual = "results/nrr_visual.svg"
        #expand('results/true{true_dists}.sim{sim_dists}', sim_dists=[1, 5, 10], true_dists=[1, 3, 5, 8, 10])
        #expand('results/truth.30000.col.neighbors{truth_dists}', truth_dists=[1, 3, 5, 8, 10]),
        #        rule neighborhood_analysis:
            


rule make_vis:
    input:
        expand("results/true{true_dists}.sim{sim_dists}", 
               true_dists=[1, 3, 5, 8, 10], 
               sim_dists=[1, 5, 10])    
    output:
        "results/nrr_visual.svg"
    shell:
        """
        python3 scripts/nrr_analysis_vis.py
        """


rule neighborhood_analysis:
    input:
        truth_neighbs = "results/truth.30000.col.neighbors{true_dists}",
        sim_neighbs = "results/sim.30000.col.neighbors{sim_dists}"
    output:
        output_file = "results/true{true_dists}.sim{sim_dists}"
    shell:
        """
        python3 scripts/neighborhoodanalysis.py -t1 {input.truth_neighbs} -t2 {input.sim_neighbs} -o {output.output_file}
        """

rule matutils_extract:
    input:
        pb_file = "data/{file_type}.30000.col.pb"
    output:
        neighbor_file = "results/{file_type}.30000.col.neighbors{dist_threshold}"    
    shell:
        """
        matUtils extract -i {input.pb_file} \
        --within-distance {output.neighbor_file} \
        --distance-threshold {wildcards.dist_threshold}
        """